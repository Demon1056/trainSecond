{"version":3,"file":"static/js/292.2f2fddff.chunk.js","mappings":"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","sources":["components/CustomTitle/CustomTitle.syled.js","components/CustomTitle/CustomTitle.jsx","redux/slices/contacts/contactsSelectors.js","validation/validation.js","components/Form/Form.styled.js","components/Form/Form.jsx","components/Filter/Filter.jsx","components/Contacts/ContactItem/ContactItem.jsx","redux/slices/filter/filterSelectors.js","components/Contacts/Contacts.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Header = styled.h2`\n  color: red;\n  margin-bottom: 30px;\n`;\n","import { Header } from './CustomTitle.syled';\n\nexport const CustomTitle = ({ text }) => {\n  return <Header>{text}</Header>;\n};\n","export const getContacts = state=> state.contacts.items\nexport const getErorr = state=>state.contacts.error\nexport const getIsLoading = state=>state.contacts.isLoading","import * as Yup from 'yup';\n\nexport const formSchema = Yup.object().shape({\n    name: Yup.string()\n      .required('Це обовязкове поле')\n      .min(3, 'мінімум 3 букви')\n      .matches(/^[a-zA-Z\\s]+$/, 'Дозволені лише латинські букви'),\n    number: Yup.string()\n      .required('Це обовязкове поле')\n      .length(9, 'має містити 9 символів у форматі 456-58-78')\n      .matches(/^[0-9]{3}-[0-9]{2}-[0-9]{2}$/, 'невірний формат'),\n  });\n  ","import styled from 'styled-components';\nimport { Field, ErrorMessage } from 'formik';\n\nexport const CustomInput = styled(Field)`\n  background-color: brown;\n  width: 400px;\n  height: 30px;\n`;\n\nexport const CustomErrorMessage = styled(ErrorMessage)`\n  background-color: red;\n  color: blue;\n`;\n","import { Formik, Form } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { addContact } from 'redux/slices/contacts/contactsOperations';\nimport { getContacts } from 'redux/slices/contacts/contactsSelectors';\nimport { formSchema } from 'validation/validation';\n\nimport { CustomInput, CustomErrorMessage } from './Form.styled';\n\nexport const MyForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const handlerSubmit = (values, actions) => {\n    let objContact;\n    if (contacts) {\n      objContact = contacts.find(\n        ({ name }) =>\n          name.toLocaleLowerCase() === values.name.toLocaleLowerCase()\n      );\n    }\n    if (objContact) {\n      return alert('Is allready in phonebook');\n    }\n    dispatch(addContact(values));\n    actions.resetForm();\n  };\n  return (\n    <>\n      <Formik\n        initialValues={{\n          name: '',\n          number: '',\n        }}\n        onSubmit={handlerSubmit}\n        validationSchema={formSchema}\n      >\n        <Form>\n          <label htmlFor=\"name\">Name</label>\n          <CustomInput name=\"name\" id=\"name\"></CustomInput>\n          <CustomErrorMessage component=\"div\" name=\"name\" />\n          <label htmlFor=\"name\">Number</label>\n          <CustomInput type=\"tel\" name=\"number\" id=\"number\"></CustomInput>\n          <CustomErrorMessage component=\"div\" name=\"number\" />\n          <button type=\"submit\">Add contact</button>\n        </Form>\n      </Formik>\n    </>\n  );\n};\n","import { useDispatch } from 'react-redux';\n\nimport { changeFilter } from 'redux/slices/filter/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const updateFilteredValue = e => {\n    dispatch(changeFilter(e.target.value));\n  };\n\n  return <input onChange={updateFilteredValue} type=\"text\" name=\"filter\" />;\n};\n","import { useDispatch } from 'react-redux';\n\nimport { deleteContact } from 'redux/slices/contacts/contactsOperations';\n\nexport const ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const deleteCont = e => {\n    const idOfDeleteContact = e.target.dataset.id;\n    dispatch(deleteContact(idOfDeleteContact));\n  };\n  return (\n    <li>\n      <span>{name}:</span>\n      <span>{number}</span>\n      <button type=\"button\" data-id={id} onClick={deleteCont}>\n        delete\n      </button>\n    </li>\n  );\n};\n","export const getFilter = state => state.filter","import { useSelector } from 'react-redux';\n\nimport { ContactItem } from './ContactItem/ContactItem';\n\nimport { getContacts } from 'redux/slices/contacts/contactsSelectors';\nimport { getFilter } from 'redux/slices/filter/filterSelectors';\n\nexport const Contacts = () => {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n\n  const filterContacts = () => {\n    if (!filter) {\n      return contacts;\n    }\n    return contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().startsWith(filter.toLocaleLowerCase())\n    );\n  };\n  const filteredContacts = filterContacts();\n\n  return (\n    contacts.length > 0 && (\n      <ul>\n        {filteredContacts.map(({ id, name, number }) => (\n          <ContactItem key={id} id={id} name={name} number={number} />\n        ))}\n      </ul>\n    )\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport { CustomTitle } from 'components/CustomTitle/CustomTitle';\nimport { MyForm } from 'components/Form/Form';\nimport { Filter } from 'components/Filter/Filter';\nimport { Contacts } from 'components/Contacts/Contacts';\n\nimport {\n  getContacts,\n  getIsLoading,\n} from 'redux/slices/contacts/contactsSelectors';\nimport { fetchAllContact } from 'redux/slices/contacts/contactsOperations';\n\nconst ContactsPage = () => {\n  const contacts = useSelector(getContacts);\n  const isLoading = useSelector(getIsLoading);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchAllContact());\n  }, [dispatch]);\n\n  return (\n    <>\n      <CustomTitle text={'PhoneBook'} />\n      <MyForm />\n      <CustomTitle text={'Contacts'} />\n      <Filter />\n      {isLoading && <h1>LOADING NOW</h1>}\n      {(contacts.length && !isLoading && <Contacts />) || (\n        <p>You don't have any contacts</p>\n      )}\n    </>\n  );\n};\n\nexport default ContactsPage"],"names":["Header","styled","CustomTitle","text","getContacts","state","contacts","items","getIsLoading","isLoading","formSchema","Yup","shape","name","required","min","matches","number","length","CustomInput","Field","CustomErrorMessage","ErrorMessage","MyForm","dispatch","useDispatch","useSelector","initialValues","onSubmit","values","actions","objContact","find","toLocaleLowerCase","alert","addContact","resetForm","validationSchema","htmlFor","id","component","type","Filter","onChange","e","changeFilter","target","value","ContactItem","onClick","idOfDeleteContact","dataset","deleteContact","getFilter","filter","Contacts","filteredContacts","contact","startsWith","map","useEffect","fetchAllContact"],"sourceRoot":""}